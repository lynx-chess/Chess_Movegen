namespace Movegen.Implementation.Lynx;

#pragma warning disable IDE0055 // Discard formatting in this region

public static class Constants
{
    /// <summary>
    /// 0xFFFFFFFFFFFFFFFFUL
    /// 8   1 1 1 1 1 1 1 1
    /// 7   1 1 1 1 1 1 1 1
    /// 6   1 1 1 1 1 1 1 1
    /// 5   1 1 1 1 1 1 1 1
    /// 4   1 1 1 1 1 1 1 1
    /// 3   1 1 1 1 1 1 1 1
    /// 2   1 1 1 1 1 1 1 1
    /// 1   1 1 1 1 1 1 1 1
    ///     a b c d e f g h
    /// </summary>
    public const BitBoard FullBoard = ulong.MaxValue;

    /// <summary>
    /// 8   1 0 0 0 0 0 0 0
    /// 7   1 0 0 0 0 0 0 0
    /// 6   1 0 0 0 0 0 0 0
    /// 5   1 0 0 0 0 0 0 0
    /// 4   1 0 0 0 0 0 0 0
    /// 3   1 0 0 0 0 0 0 0
    /// 2   1 0 0 0 0 0 0 0
    /// 1   1 0 0 0 0 0 0 0
    ///     a b c d e f g h
    /// </summary>
    public const BitBoard AFile = 0x101010101010101;

    /// <summary>
    /// 8   0 1 1 1 1 1 1 1
    /// 7   0 1 1 1 1 1 1 1
    /// 6   0 1 1 1 1 1 1 1
    /// 5   0 1 1 1 1 1 1 1
    /// 4   0 1 1 1 1 1 1 1
    /// 3   0 1 1 1 1 1 1 1
    /// 2   0 1 1 1 1 1 1 1
    /// 1   0 1 1 1 1 1 1 1
    ///     a b c d e f g h
    /// </summary>
    public const BitBoard NotAFile = 0xFEFEFEFEFEFEFEFE;

    /// <summary>
    /// 8   0 0 0 0 0 0 0 1
    /// 7   0 0 0 0 0 0 0 1
    /// 6   0 0 0 0 0 0 0 1
    /// 5   0 0 0 0 0 0 0 1
    /// 4   0 0 0 0 0 0 0 1
    /// 3   0 0 0 0 0 0 0 1
    /// 2   0 0 0 0 0 0 0 1
    /// 1   0 0 0 0 0 0 0 1
    ///     a b c d e f g h
    /// </summary>
    public const BitBoard HFile = 0x8080808080808080;

    /// <summary>
    /// 8   1 1 1 1 1 1 1 0
    /// 7   1 1 1 1 1 1 1 0
    /// 6   1 1 1 1 1 1 1 0
    /// 5   1 1 1 1 1 1 1 0
    /// 4   1 1 1 1 1 1 1 0
    /// 3   1 1 1 1 1 1 1 0
    /// 2   1 1 1 1 1 1 1 0
    /// 1   1 1 1 1 1 1 1 0
    ///     a b c d e f g h
    /// </summary>
    public const BitBoard NotHFile = 0x7F7F7F7F7F7F7F7F;

    /// <summary>
    /// 8   1 1 1 1 1 1 0 0
    /// 7   1 1 1 1 1 1 0 0
    /// 6   1 1 1 1 1 1 0 0
    /// 5   1 1 1 1 1 1 0 0
    /// 4   1 1 1 1 1 1 0 0
    /// 3   1 1 1 1 1 1 0 0
    /// 2   1 1 1 1 1 1 0 0
    /// 1   1 1 1 1 1 1 0 0
    ///     a b c d e f g h
    /// </summary>
    public const BitBoard NotHGFiles = 0x3F3F3F3F3F3F3F3F;

    /// <summary>
    /// 8   0 0 1 1 1 1 1 1
    /// 7   0 0 1 1 1 1 1 1
    /// 6   0 0 1 1 1 1 1 1
    /// 5   0 0 1 1 1 1 1 1
    /// 4   0 0 1 1 1 1 1 1
    /// 3   0 0 1 1 1 1 1 1
    /// 2   0 0 1 1 1 1 1 1
    /// 1   0 0 1 1 1 1 1 1
    ///     a b c d e f g h
    /// </summary>
    public const BitBoard NotABFiles = 0xFCFCFCFCFCFCFCFC;

    public static readonly string[] Coordinates =
    [
        "a8", "b8", "c8", "d8", "e8", "f8", "g8", "h8",
        "a7", "b7", "c7", "d7", "e7", "f7", "g7", "h7",
        "a6", "b6", "c6", "d6", "e6", "f6", "g6", "h6",
        "a5", "b5", "c5", "d5", "e5", "f5", "g5", "h5",
        "a4", "b4", "c4", "d4", "e4", "f4", "g4", "h4",
        "a3", "b3", "c3", "d3", "e3", "f3", "g3", "h3",
        "a2", "b2", "c2", "d2", "e2", "f2", "g2", "h2",
        "a1", "b1", "c1", "d1", "e1", "f1", "g1", "h1"
    ];

    public static readonly char[][] CoordinatesCharArray =
    [
        ['a','8'], ['b','8'], ['c','8'], ['d','8'], ['e','8'], ['f','8'], ['g','8'], ['h','8'],
        ['a','7'], ['b','7'], ['c','7'], ['d','7'], ['e','7'], ['f','7'], ['g','7'], ['h','7'],
        ['a','6'], ['b','6'], ['c','6'], ['d','6'], ['e','6'], ['f','6'], ['g','6'], ['h','6'],
        ['a','5'], ['b','5'], ['c','5'], ['d','5'], ['e','5'], ['f','5'], ['g','5'], ['h','5'],
        ['a','4'], ['b','4'], ['c','4'], ['d','4'], ['e','4'], ['f','4'], ['g','4'], ['h','4'],
        ['a','3'], ['b','3'], ['c','3'], ['d','3'], ['e','3'], ['f','3'], ['g','3'], ['h','3'],
        ['a','2'], ['b','2'], ['c','2'], ['d','2'], ['e','2'], ['f','2'], ['g','2'], ['h','2'],
        ['a','1'], ['b','1'], ['c','1'], ['d','1'], ['e','1'], ['f','1'], ['g','1'], ['h','1']
    ];

    /// <summary>
    /// Relevant bishop occupancy bit count per square
    /// </summary>
    public static readonly int[] BishopRelevantOccupancyBits =
    [
        6, 5, 5, 5, 5, 5, 5, 6,
        5, 5, 5, 5, 5, 5, 5, 5,
        5, 5, 7, 7, 7, 7, 5, 5,
        5, 5, 7, 9, 9, 7, 5, 5,
        5, 5, 7, 9, 9, 7, 5, 5,
        5, 5, 7, 7, 7, 7, 5, 5,
        5, 5, 5, 5, 5, 5, 5, 5,
        6, 5, 5, 5, 5, 5, 5, 6,
    ];

    /// <summary>
    /// Relevant rook occupancy bit count per square
    /// </summary>
    public static readonly int[] RookRelevantOccupancyBits =
    [
        12, 11, 11, 11, 11, 11, 11, 12,
        11, 10, 10, 10, 10, 10, 10, 11,
        11, 10, 10, 10, 10, 10, 10, 11,
        11, 10, 10, 10, 10, 10, 10, 11,
        11, 10, 10, 10, 10, 10, 10, 11,
        11, 10, 10, 10, 10, 10, 10, 11,
        11, 10, 10, 10, 10, 10, 10, 11,
        12, 11, 11, 11, 11, 11, 11, 12
    ];

    /// <summary>
    /// https://github.com/maksimKorzh/chess_programming/blob/master/src/bbc/init_magics/bbc.c
    /// </summary>
    public static readonly BitBoard[] RookMagicNumbers =
    [
        0x8a80104000800020UL, 0x140002000100040UL, 0x2801880a0017001UL, 0x100081001000420UL, 0x200020010080420UL, 0x3001c0002010008UL, 0x8480008002000100UL, 0x2080088004402900UL,
        0x800098204000UL, 0x2024401000200040UL, 0x100802000801000UL, 0x120800800801000UL, 0x208808088000400UL, 0x2802200800400UL, 0x2200800100020080UL, 0x801000060821100UL,
        0x80044006422000UL, 0x100808020004000UL, 0x12108a0010204200UL, 0x140848010000802UL, 0x481828014002800UL, 0x8094004002004100UL, 0x4010040010010802UL, 0x20008806104UL,
        0x100400080208000UL, 0x2040002120081000UL, 0x21200680100081UL, 0x20100080080080UL, 0x2000a00200410UL, 0x20080800400UL, 0x80088400100102UL, 0x80004600042881UL,
        0x4040008040800020UL, 0x440003000200801UL, 0x4200011004500UL, 0x188020010100100UL, 0x14800401802800UL, 0x2080040080800200UL, 0x124080204001001UL, 0x200046502000484UL,
        0x480400080088020UL, 0x1000422010034000UL, 0x30200100110040UL, 0x100021010009UL, 0x2002080100110004UL, 0x202008004008002UL, 0x20020004010100UL, 0x2048440040820001UL,
        0x101002200408200UL, 0x40802000401080UL, 0x4008142004410100UL, 0x2060820c0120200UL, 0x1001004080100UL, 0x20c020080040080UL, 0x2935610830022400UL, 0x44440041009200UL,
        0x280001040802101UL, 0x2100190040002085UL, 0x80c0084100102001UL, 0x4024081001000421UL, 0x20030a0244872UL, 0x12001008414402UL, 0x2006104900a0804UL, 0x1004081002402UL
    ];

    /// <summary>
    /// https://github.com/maksimKorzh/chess_programming/blob/master/src/bbc/init_magics/bbc.c
    /// </summary>
    public static readonly BitBoard[] BishopMagicNumbers =
    [
        0x40040844404084UL, 0x2004208a004208UL, 0x10190041080202UL, 0x108060845042010UL, 0x581104180800210UL, 0x2112080446200010UL, 0x1080820820060210UL, 0x3c0808410220200UL,
        0x4050404440404UL, 0x21001420088UL, 0x24d0080801082102UL, 0x1020a0a020400UL, 0x40308200402UL, 0x4011002100800UL, 0x401484104104005UL, 0x801010402020200UL,
        0x400210c3880100UL, 0x404022024108200UL, 0x810018200204102UL, 0x4002801a02003UL, 0x85040820080400UL, 0x810102c808880400UL, 0xe900410884800UL, 0x8002020480840102UL,
        0x220200865090201UL, 0x2010100a02021202UL, 0x152048408022401UL, 0x20080002081110UL, 0x4001001021004000UL, 0x800040400a011002UL, 0xe4004081011002UL, 0x1c004001012080UL,
        0x8004200962a00220UL, 0x8422100208500202UL, 0x2000402200300c08UL, 0x8646020080080080UL, 0x80020a0200100808UL, 0x2010004880111000UL, 0x623000a080011400UL, 0x42008c0340209202UL,
        0x209188240001000UL, 0x400408a884001800UL, 0x110400a6080400UL, 0x1840060a44020800UL, 0x90080104000041UL, 0x201011000808101UL, 0x1a2208080504f080UL, 0x8012020600211212UL,
        0x500861011240000UL, 0x180806108200800UL, 0x4000020e01040044UL, 0x300000261044000aUL, 0x802241102020002UL, 0x20906061210001UL, 0x5a84841004010310UL, 0x4010801011c04UL,
        0xa010109502200UL, 0x4a02012000UL, 0x500201010098b028UL, 0x8040002811040900UL, 0x28000010020204UL, 0x6000020202d0240UL, 0x8918844842082200UL, 0x4010011029020020UL
    ];
}

#pragma warning restore IDE0055
